{"ast":null,"code":"const API = 'http://localhost:3001/api';\nexport async function login(username, password) {\n  const res = await fetch(`${API}/auth/login`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      username,\n      password\n    })\n  });\n  if (!res.ok) throw new Error('登录失败');\n  return res.json();\n}\nexport async function register(username, email, password) {\n  const res = await fetch(`${API}/auth/register`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      username,\n      email,\n      password\n    })\n  });\n  if (!res.ok) throw new Error('注册失败');\n  return res.json();\n}\nexport async function fetchNotes(token, params = '') {\n  // 如果有参数，使用search接口，否则使用普通获取接口\n  let url = `${API}/notes${params ? '/search' : ''}`;\n  if (params && params.trim()) {\n    url = `${url}?${params}`;\n  }\n  const res = await fetch(url, {\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  });\n  if (!res.ok) throw new Error('获取笔记失败');\n  return res.json();\n}\nexport async function deleteNote(token, id) {\n  const res = await fetch(`${API}/notes/${id}`, {\n    method: 'DELETE',\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  });\n  if (!res.ok) throw new Error('删除失败');\n  return res.json();\n}\nexport async function batchDeleteNotes(token, ids) {\n  const res = await fetch(`${API}/notes/batch-delete`, {\n    method: 'POST',\n    headers: {\n      'Authorization': `Bearer ${token}`,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      ids\n    })\n  });\n  if (!res.ok) throw new Error('批量删除失败');\n  return res.json();\n}\nexport async function editNote(token, id, data) {\n  const res = await fetch(`${API}/notes/${id}`, {\n    method: 'PUT',\n    headers: {\n      'Authorization': `Bearer ${token}`,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(data)\n  });\n  if (!res.ok) throw new Error('编辑失败');\n  return res.json();\n}\n\n// 导出所有笔记\nexport async function exportAllNotes(params = {}) {\n  const token = localStorage.getItem('webnotebook_token');\n  let query = Object.entries(params).map(([k, v]) => v ? `${encodeURIComponent(k)}=${encodeURIComponent(v)}` : '').filter(Boolean).join('&');\n  const url = `${API}/notes/export${query ? '?' + query : ''}`;\n  const res = await fetch(url, {\n    headers: {\n      'Authorization': token ? `Bearer ${token}` : ''\n    }\n  });\n  if (!res.ok) throw new Error('导出失败');\n  const contentDisposition = res.headers.get('content-disposition');\n  const filename = contentDisposition ? contentDisposition.split('filename=')[1] : 'all_notes.xlsx';\n  const blob = await res.blob();\n  const link = document.createElement('a');\n  link.href = window.URL.createObjectURL(blob);\n  link.download = filename;\n  link.click();\n  window.URL.revokeObjectURL(link.href);\n}\n\n// 导出选中的笔记\nexport async function exportSelectedNotes(selectedIds) {\n  if (!selectedIds || !Array.isArray(selectedIds) || selectedIds.length === 0) {\n    throw new Error('请选择要导出的笔记');\n  }\n  const token = localStorage.getItem('webnotebook_token');\n  const selectedIdsStr = selectedIds.join(',');\n  const url = `${API}/notes/export?selectedIds=${selectedIdsStr}`;\n  const res = await fetch(url, {\n    headers: {\n      'Authorization': token ? `Bearer ${token}` : ''\n    }\n  });\n  if (!res.ok) throw new Error('导出失败');\n  const contentDisposition = res.headers.get('content-disposition');\n  const filename = contentDisposition ? contentDisposition.split('filename=')[1] : 'selected_notes.xlsx';\n  const blob = await res.blob();\n  const link = document.createElement('a');\n  link.href = window.URL.createObjectURL(blob);\n  link.download = filename;\n  link.click();\n  window.URL.revokeObjectURL(link.href);\n}","map":{"version":3,"names":["API","login","username","password","res","fetch","method","headers","body","JSON","stringify","ok","Error","json","register","email","fetchNotes","token","params","url","trim","deleteNote","id","batchDeleteNotes","ids","editNote","data","exportAllNotes","localStorage","getItem","query","Object","entries","map","k","v","encodeURIComponent","filter","Boolean","join","contentDisposition","get","filename","split","blob","link","document","createElement","href","window","URL","createObjectURL","download","click","revokeObjectURL","exportSelectedNotes","selectedIds","Array","isArray","length","selectedIdsStr"],"sources":["C:/Users/MiracleHe/Desktop/webnotebook/web-admin/src/api.js"],"sourcesContent":["const API = 'http://localhost:3001/api';\r\n\r\nexport async function login(username, password) {\r\n    const res = await fetch(`${API}/auth/login`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ username, password })\r\n    });\r\n    if (!res.ok) throw new Error('登录失败');\r\n    return res.json();\r\n}\r\n\r\nexport async function register(username, email, password) {\r\n    const res = await fetch(`${API}/auth/register`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ username, email, password })\r\n    });\r\n    if (!res.ok) throw new Error('注册失败');\r\n    return res.json();\r\n}\r\n\r\nexport async function fetchNotes(token, params = '') {\r\n    // 如果有参数，使用search接口，否则使用普通获取接口\r\n    let url = `${API}/notes${params ? '/search' : ''}`;\r\n    if (params && params.trim()) {\r\n        url = `${url}?${params}`;\r\n    }\r\n    const res = await fetch(url, {\r\n        headers: { 'Authorization': `Bearer ${token}` }\r\n    });\r\n    if (!res.ok) throw new Error('获取笔记失败');\r\n    return res.json();\r\n}\r\n\r\nexport async function deleteNote(token, id) {\r\n    const res = await fetch(`${API}/notes/${id}`, {\r\n        method: 'DELETE',\r\n        headers: { 'Authorization': `Bearer ${token}` }\r\n    });\r\n    if (!res.ok) throw new Error('删除失败');\r\n    return res.json();\r\n}\r\n\r\nexport async function batchDeleteNotes(token, ids) {\r\n    const res = await fetch(`${API}/notes/batch-delete`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Authorization': `Bearer ${token}`,\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ ids })\r\n    });\r\n    if (!res.ok) throw new Error('批量删除失败');\r\n    return res.json();\r\n}\r\n\r\nexport async function editNote(token, id, data) {\r\n    const res = await fetch(`${API}/notes/${id}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n            'Authorization': `Bearer ${token}`,\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(data)\r\n    });\r\n    if (!res.ok) throw new Error('编辑失败');\r\n    return res.json();\r\n}\r\n\r\n// 导出所有笔记\r\nexport async function exportAllNotes(params = {}) {\r\n    const token = localStorage.getItem('webnotebook_token');\r\n    let query = Object.entries(params)\r\n        .map(([k, v]) => v ? `${encodeURIComponent(k)}=${encodeURIComponent(v)}` : '')\r\n        .filter(Boolean)\r\n        .join('&');\r\n\r\n    const url = `${API}/notes/export${query ? '?' + query : ''}`;\r\n    const res = await fetch(url, {\r\n        headers: { 'Authorization': token ? `Bearer ${token}` : '' }\r\n    });\r\n    if (!res.ok) throw new Error('导出失败');\r\n\r\n    const contentDisposition = res.headers.get('content-disposition');\r\n    const filename = contentDisposition ? contentDisposition.split('filename=')[1] : 'all_notes.xlsx';\r\n\r\n    const blob = await res.blob();\r\n    const link = document.createElement('a');\r\n    link.href = window.URL.createObjectURL(blob);\r\n    link.download = filename;\r\n    link.click();\r\n    window.URL.revokeObjectURL(link.href);\r\n}\r\n\r\n// 导出选中的笔记\r\nexport async function exportSelectedNotes(selectedIds) {\r\n    if (!selectedIds || !Array.isArray(selectedIds) || selectedIds.length === 0) {\r\n        throw new Error('请选择要导出的笔记');\r\n    }\r\n\r\n    const token = localStorage.getItem('webnotebook_token');\r\n    const selectedIdsStr = selectedIds.join(',');\r\n    const url = `${API}/notes/export?selectedIds=${selectedIdsStr}`;\r\n\r\n    const res = await fetch(url, {\r\n        headers: { 'Authorization': token ? `Bearer ${token}` : '' }\r\n    });\r\n    if (!res.ok) throw new Error('导出失败');\r\n\r\n    const contentDisposition = res.headers.get('content-disposition');\r\n    const filename = contentDisposition ? contentDisposition.split('filename=')[1] : 'selected_notes.xlsx';\r\n\r\n    const blob = await res.blob();\r\n    const link = document.createElement('a');\r\n    link.href = window.URL.createObjectURL(blob);\r\n    link.download = filename;\r\n    link.click();\r\n    window.URL.revokeObjectURL(link.href);\r\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}