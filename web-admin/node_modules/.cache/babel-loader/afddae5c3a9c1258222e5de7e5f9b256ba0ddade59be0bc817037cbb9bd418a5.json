{"ast":null,"code":"const API = 'http://localhost:3001/api';\nexport async function login(username, password) {\n  const res = await fetch(`${API}/auth/login`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      username,\n      password\n    })\n  });\n  if (!res.ok) throw new Error('登录失败');\n  return res.json();\n}\nexport async function register(username, email, password) {\n  const res = await fetch(`${API}/auth/register`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      username,\n      email,\n      password\n    })\n  });\n  if (!res.ok) throw new Error('注册失败');\n  return res.json();\n}\nexport async function fetchNotes(token, params = '') {\n  // 如果有参数，使用search接口，否则使用普通获取接口\n  let url = `${API}/notes${params ? '/search' : ''}`;\n  if (params && params.trim()) {\n    url = `${url}?${params}`;\n  }\n  const res = await fetch(url, {\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  });\n  if (!res.ok) throw new Error('获取笔记失败');\n  return res.json();\n}\nexport async function deleteNote(token, id) {\n  const res = await fetch(`${API}/notes/${id}`, {\n    method: 'DELETE',\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  });\n  if (!res.ok) throw new Error('删除失败');\n  return res.json();\n}\nexport async function batchDeleteNotes(token, ids) {\n  const res = await fetch(`${API}/notes/batch-delete`, {\n    method: 'POST',\n    headers: {\n      'Authorization': `Bearer ${token}`,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      ids\n    })\n  });\n  if (!res.ok) throw new Error('批量删除失败');\n  return res.json();\n}\nexport async function editNote(token, id, data) {\n  const res = await fetch(`${API}/notes/${id}`, {\n    method: 'PUT',\n    headers: {\n      'Authorization': `Bearer ${token}`,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(data)\n  });\n  if (!res.ok) throw new Error('编辑失败');\n  return res.json();\n}\nexport async function exportNotes(token, selectedIds = []) {\n  let url = `${API}/notes/export`;\n  if (selectedIds && selectedIds.length > 0) {\n    url += `?ids=${selectedIds.join(',')}`;\n  }\n  const res = await fetch(url, {\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  });\n  if (!res.ok) {\n    const error = await res.text();\n    throw new Error(error || '导出失败');\n  }\n  return await res.blob();\n}","map":{"version":3,"names":["API","login","username","password","res","fetch","method","headers","body","JSON","stringify","ok","Error","json","register","email","fetchNotes","token","params","url","trim","deleteNote","id","batchDeleteNotes","ids","editNote","data","exportNotes","selectedIds","length","join","error","text","blob"],"sources":["C:/Users/MiracleHe/Desktop/webnotebook/web-admin/src/api.js"],"sourcesContent":["const API = 'http://localhost:3001/api';\r\n\r\nexport async function login(username, password) {\r\n    const res = await fetch(`${API}/auth/login`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ username, password })\r\n    });\r\n    if (!res.ok) throw new Error('登录失败');\r\n    return res.json();\r\n}\r\n\r\nexport async function register(username, email, password) {\r\n    const res = await fetch(`${API}/auth/register`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ username, email, password })\r\n    });\r\n    if (!res.ok) throw new Error('注册失败');\r\n    return res.json();\r\n}\r\n\r\nexport async function fetchNotes(token, params = '') {\r\n    // 如果有参数，使用search接口，否则使用普通获取接口\r\n    let url = `${API}/notes${params ? '/search' : ''}`;\r\n    if (params && params.trim()) {\r\n        url = `${url}?${params}`;\r\n    }\r\n    const res = await fetch(url, {\r\n        headers: { 'Authorization': `Bearer ${token}` }\r\n    });\r\n    if (!res.ok) throw new Error('获取笔记失败');\r\n    return res.json();\r\n}\r\n\r\nexport async function deleteNote(token, id) {\r\n    const res = await fetch(`${API}/notes/${id}`, {\r\n        method: 'DELETE',\r\n        headers: { 'Authorization': `Bearer ${token}` }\r\n    });\r\n    if (!res.ok) throw new Error('删除失败');\r\n    return res.json();\r\n}\r\n\r\nexport async function batchDeleteNotes(token, ids) {\r\n    const res = await fetch(`${API}/notes/batch-delete`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Authorization': `Bearer ${token}`,\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ ids })\r\n    });\r\n    if (!res.ok) throw new Error('批量删除失败');\r\n    return res.json();\r\n}\r\n\r\nexport async function editNote(token, id, data) {\r\n    const res = await fetch(`${API}/notes/${id}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n            'Authorization': `Bearer ${token}`,\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(data)\r\n    });\r\n    if (!res.ok) throw new Error('编辑失败');\r\n    return res.json();\r\n}\r\n\r\nexport async function exportNotes(token, selectedIds = []) {\r\n    let url = `${API}/notes/export`;\r\n    if (selectedIds && selectedIds.length > 0) {\r\n        url += `?ids=${selectedIds.join(',')}`;\r\n    }\r\n    const res = await fetch(url, {\r\n        headers: { 'Authorization': `Bearer ${token}` }\r\n    });\r\n    if (!res.ok) {\r\n        const error = await res.text();\r\n        throw new Error(error || '导出失败');\r\n    }\r\n    return await res.blob();\r\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}