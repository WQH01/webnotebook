{"ast":null,"code":"const API = 'http://localhost:3001/api';\nexport async function login(username, password) {\n  const res = await fetch(`${API}/auth/login`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      username,\n      password\n    })\n  });\n  if (!res.ok) throw new Error('登录失败');\n  return res.json();\n}\nexport async function register(username, email, password) {\n  const res = await fetch(`${API}/auth/register`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      username,\n      email,\n      password\n    })\n  });\n  if (!res.ok) throw new Error('注册失败');\n  return res.json();\n}\nexport async function fetchNotes(token, params = '') {\n  const res = await fetch(`${API}/notes?${params}`, {\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  });\n  if (!res.ok) throw new Error('获取笔记失败');\n  return res.json();\n}\nexport async function deleteNote(token, id) {\n  const res = await fetch(`${API}/notes/${id}`, {\n    method: 'DELETE',\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  });\n  if (!res.ok) throw new Error('删除失败');\n  return res.json();\n}","map":{"version":3,"names":["API","login","username","password","res","fetch","method","headers","body","JSON","stringify","ok","Error","json","register","email","fetchNotes","token","params","deleteNote","id"],"sources":["C:/Users/MiracleHe/Desktop/webnotebook/web-admin/src/api.js"],"sourcesContent":["const API = 'http://localhost:3001/api';\r\n\r\nexport async function login(username, password) {\r\n    const res = await fetch(`${API}/auth/login`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ username, password })\r\n    });\r\n    if (!res.ok) throw new Error('登录失败');\r\n    return res.json();\r\n}\r\n\r\nexport async function register(username, email, password) {\r\n    const res = await fetch(`${API}/auth/register`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ username, email, password })\r\n    });\r\n    if (!res.ok) throw new Error('注册失败');\r\n    return res.json();\r\n}\r\n\r\nexport async function fetchNotes(token, params = '') {\r\n    const res = await fetch(`${API}/notes?${params}`, {\r\n        headers: { 'Authorization': `Bearer ${token}` }\r\n    });\r\n    if (!res.ok) throw new Error('获取笔记失败');\r\n    return res.json();\r\n}\r\n\r\nexport async function deleteNote(token, id) {\r\n    const res = await fetch(`${API}/notes/${id}`, {\r\n        method: 'DELETE',\r\n        headers: { 'Authorization': `Bearer ${token}` }\r\n    });\r\n    if (!res.ok) throw new Error('删除失败');\r\n    return res.json();\r\n} "],"mappings":"AAAA,MAAMA,GAAG,GAAG,2BAA2B;AAEvC,OAAO,eAAeC,KAAKA,CAACC,QAAQ,EAAEC,QAAQ,EAAE;EAC5C,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGL,GAAG,aAAa,EAAE;IACzCM,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAER,QAAQ;MAAEC;IAAS,CAAC;EAC/C,CAAC,CAAC;EACF,IAAI,CAACC,GAAG,CAACO,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,MAAM,CAAC;EACpC,OAAOR,GAAG,CAACS,IAAI,CAAC,CAAC;AACrB;AAEA,OAAO,eAAeC,QAAQA,CAACZ,QAAQ,EAAEa,KAAK,EAAEZ,QAAQ,EAAE;EACtD,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGL,GAAG,gBAAgB,EAAE;IAC5CM,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAER,QAAQ;MAAEa,KAAK;MAAEZ;IAAS,CAAC;EACtD,CAAC,CAAC;EACF,IAAI,CAACC,GAAG,CAACO,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,MAAM,CAAC;EACpC,OAAOR,GAAG,CAACS,IAAI,CAAC,CAAC;AACrB;AAEA,OAAO,eAAeG,UAAUA,CAACC,KAAK,EAAEC,MAAM,GAAG,EAAE,EAAE;EACjD,MAAMd,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGL,GAAG,UAAUkB,MAAM,EAAE,EAAE;IAC9CX,OAAO,EAAE;MAAE,eAAe,EAAE,UAAUU,KAAK;IAAG;EAClD,CAAC,CAAC;EACF,IAAI,CAACb,GAAG,CAACO,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,QAAQ,CAAC;EACtC,OAAOR,GAAG,CAACS,IAAI,CAAC,CAAC;AACrB;AAEA,OAAO,eAAeM,UAAUA,CAACF,KAAK,EAAEG,EAAE,EAAE;EACxC,MAAMhB,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGL,GAAG,UAAUoB,EAAE,EAAE,EAAE;IAC1Cd,MAAM,EAAE,QAAQ;IAChBC,OAAO,EAAE;MAAE,eAAe,EAAE,UAAUU,KAAK;IAAG;EAClD,CAAC,CAAC;EACF,IAAI,CAACb,GAAG,CAACO,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,MAAM,CAAC;EACpC,OAAOR,GAAG,CAACS,IAAI,CAAC,CAAC;AACrB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}