{"ast":null,"code":"const API = 'http://localhost:3001/api';\nexport async function login(username, password) {\n  const res = await fetch(`${API}/auth/login`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      username,\n      password\n    })\n  });\n  if (!res.ok) throw new Error('登录失败');\n  return res.json();\n}\nexport async function register(username, email, password) {\n  const res = await fetch(`${API}/auth/register`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      username,\n      email,\n      password\n    })\n  });\n  if (!res.ok) throw new Error('注册失败');\n  return res.json();\n}\nexport async function fetchNotes(token, params = '') {\n  // 如果有参数，使用search接口，否则使用普通获取接口\n  let url = `${API}/notes${params ? '/search' : ''}`;\n  if (params && params.trim()) {\n    url = `${url}?${params}`;\n  }\n  const res = await fetch(url, {\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  });\n  if (!res.ok) throw new Error('获取笔记失败');\n  return res.json();\n}\nexport async function deleteNote(token, id) {\n  const res = await fetch(`${API}/notes/${id}`, {\n    method: 'DELETE',\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  });\n  if (!res.ok) throw new Error('删除失败');\n  return res.json();\n}\nexport async function batchDeleteNotes(token, ids) {\n  const res = await fetch(`${API}/notes/batch-delete`, {\n    method: 'POST',\n    headers: {\n      'Authorization': `Bearer ${token}`,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      ids\n    })\n  });\n  if (!res.ok) throw new Error('批量删除失败');\n  return res.json();\n}\nexport async function editNote(token, id, data) {\n  const res = await fetch(`${API}/notes/${id}`, {\n    method: 'PUT',\n    headers: {\n      'Authorization': `Bearer ${token}`,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(data)\n  });\n  if (!res.ok) throw new Error('编辑失败');\n  return res.json();\n}\nexport async function exportNotes(token, params = {}) {\n  try {\n    // 确保ids参数正确传递\n    const query = Object.entries(params).filter(([_, v]) => v !== undefined && v !== '') // 过滤掉空值\n    .map(([k, v]) => `${encodeURIComponent(k)}=${encodeURIComponent(v)}`).join('&');\n    const url = `${API}/notes/export${query ? '?' + query : ''}`;\n    const res = await fetch(url, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Accept': 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n      }\n    });\n    if (!res.ok) {\n      const errorData = await res.json();\n      throw new Error(errorData.message || '导出失败');\n    }\n    const blob = await res.blob();\n    const downloadUrl = window.URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = downloadUrl;\n\n    // 获取当前时间戳\n    const date = new Date();\n    const timestamp = `${date.getFullYear()}${String(date.getMonth() + 1).padStart(2, '0')}${String(date.getDate()).padStart(2, '0')}_${String(date.getHours()).padStart(2, '0')}${String(date.getMinutes()).padStart(2, '0')}`;\n\n    // 设置文件名\n    a.download = `笔记导出_${timestamp}.xlsx`;\n    document.body.appendChild(a);\n    a.click();\n    window.URL.revokeObjectURL(downloadUrl);\n    document.body.removeChild(a);\n    return true;\n  } catch (error) {\n    console.error('导出失败:', error);\n    throw error;\n  }\n}","map":{"version":3,"names":["API","login","username","password","res","fetch","method","headers","body","JSON","stringify","ok","Error","json","register","email","fetchNotes","token","params","url","trim","deleteNote","id","batchDeleteNotes","ids","editNote","data","exportNotes","query","Object","entries","filter","_","v","undefined","map","k","encodeURIComponent","join","errorData","message","blob","downloadUrl","window","URL","createObjectURL","a","document","createElement","href","date","Date","timestamp","getFullYear","String","getMonth","padStart","getDate","getHours","getMinutes","download","appendChild","click","revokeObjectURL","removeChild","error","console"],"sources":["C:/Users/MiracleHe/Desktop/webnotebook/web-admin/src/api.js"],"sourcesContent":["const API = 'http://localhost:3001/api';\r\n\r\nexport async function login(username, password) {\r\n    const res = await fetch(`${API}/auth/login`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ username, password })\r\n    });\r\n    if (!res.ok) throw new Error('登录失败');\r\n    return res.json();\r\n}\r\n\r\nexport async function register(username, email, password) {\r\n    const res = await fetch(`${API}/auth/register`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ username, email, password })\r\n    });\r\n    if (!res.ok) throw new Error('注册失败');\r\n    return res.json();\r\n}\r\n\r\nexport async function fetchNotes(token, params = '') {\r\n    // 如果有参数，使用search接口，否则使用普通获取接口\r\n    let url = `${API}/notes${params ? '/search' : ''}`;\r\n    if (params && params.trim()) {\r\n        url = `${url}?${params}`;\r\n    }\r\n    const res = await fetch(url, {\r\n        headers: { 'Authorization': `Bearer ${token}` }\r\n    });\r\n    if (!res.ok) throw new Error('获取笔记失败');\r\n    return res.json();\r\n}\r\n\r\nexport async function deleteNote(token, id) {\r\n    const res = await fetch(`${API}/notes/${id}`, {\r\n        method: 'DELETE',\r\n        headers: { 'Authorization': `Bearer ${token}` }\r\n    });\r\n    if (!res.ok) throw new Error('删除失败');\r\n    return res.json();\r\n}\r\n\r\nexport async function batchDeleteNotes(token, ids) {\r\n    const res = await fetch(`${API}/notes/batch-delete`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Authorization': `Bearer ${token}`,\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ ids })\r\n    });\r\n    if (!res.ok) throw new Error('批量删除失败');\r\n    return res.json();\r\n}\r\n\r\nexport async function editNote(token, id, data) {\r\n    const res = await fetch(`${API}/notes/${id}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n            'Authorization': `Bearer ${token}`,\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(data)\r\n    });\r\n    if (!res.ok) throw new Error('编辑失败');\r\n    return res.json();\r\n}\r\n\r\nexport async function exportNotes(token, params = {}) {\r\n    try {\r\n        // 确保ids参数正确传递\r\n        const query = Object.entries(params)\r\n            .filter(([_, v]) => v !== undefined && v !== '')  // 过滤掉空值\r\n            .map(([k, v]) => `${encodeURIComponent(k)}=${encodeURIComponent(v)}`)\r\n            .join('&');\r\n\r\n        const url = `${API}/notes/export${query ? '?' + query : ''}`;\r\n        const res = await fetch(url, {\r\n            headers: {\r\n                'Authorization': `Bearer ${token}`,\r\n                'Accept': 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\r\n            }\r\n        });\r\n\r\n        if (!res.ok) {\r\n            const errorData = await res.json();\r\n            throw new Error(errorData.message || '导出失败');\r\n        }\r\n\r\n        const blob = await res.blob();\r\n        const downloadUrl = window.URL.createObjectURL(blob);\r\n        const a = document.createElement('a');\r\n        a.href = downloadUrl;\r\n\r\n        // 获取当前时间戳\r\n        const date = new Date();\r\n        const timestamp = `${date.getFullYear()}${String(date.getMonth() + 1).padStart(2, '0')}${String(date.getDate()).padStart(2, '0')}_${String(date.getHours()).padStart(2, '0')}${String(date.getMinutes()).padStart(2, '0')}`;\r\n\r\n        // 设置文件名\r\n        a.download = `笔记导出_${timestamp}.xlsx`;\r\n\r\n        document.body.appendChild(a);\r\n        a.click();\r\n        window.URL.revokeObjectURL(downloadUrl);\r\n        document.body.removeChild(a);\r\n\r\n        return true;\r\n    } catch (error) {\r\n        console.error('导出失败:', error);\r\n        throw error;\r\n    }\r\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}